#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define LOWER  1
#define RAISE  2

/ {
       keymap {
              compatible = "zmk,keymap";
 
              default_layer {
 // -------------------------------------------------------------------------------------------------------------------------------------------------
 // |  TAB  |   Q    |   W    |   E    |   R    |   T    |                                    |   Y    |   U    |   I    |   O    |   P    |  BSPC  |
 // |  ESC  |   A    |   S    |   D    |   F    |   G    |                                    |   H    |   J    |   K    |   L    |   ;    |   '    |
 // | SHIFT |   Z    |   X    |   C    |   V    |   B    |  F2   |                    |  F12  |   N    |   M    |   ,    |   .    |   /    |   \    |
 // |  DEL  |  LCTL  |  LALT  |  LGUI  |      LOWER      | ENTER |                    | SPACE | RAISE  |  KANA  |  LEFT  |  DOWN  |  UP    |  RIGHT |
                     bindings = <
       &kp TAB    &kp Q    &kp W    &kp E    &kp R     &kp T                                &kp Y     &kp U     &kp I     &kp O      &kp P     &kp BSPC
       &kp ESC    &kp A    &kp S    &kp D    &kp F     &kp G                                &kp H     &kp J     &kp K     &kp L      &kp SEMI  &kp SQT
       &kp LSHFT  &kp Z    &kp X    &kp C    &kp V     &kp B     &kp F2           &kp F12   &kp N     &kp M     &kp COMMA &kp PERIOD &kp SLASH &kp BSLH
       &mo ADJUST &kp LCTL &kp LALT &kp LGUI &mo LOWER           &kp ENTER        &kp SPACE           &mo RAISE &kp LEFT  &kp DOWN   &kp UP    &kp RIGHT
                     >;
              };
              lower_layer {
 // ---------------------------------------------------------------------------------------------------------------------------------
 // |  ~   |  !   |  @   |  #   |  $   |  %   |                                  |  ^   |  &   |  *   |  (   |  )   |      |
 // |      |      |      |      |      |      |                                  |      |  _   |  +   |  {   |  }   |      |
 // |      |      |      |      |      |      |      |                    |      |      |      |      |      |      |      |
 // |      |      |      |      |      |      |      |                    |      |      |      |      |      |      |      |
                     bindings = <
       &kp TILDE &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT                          &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &trans
       &trans    &trans   &trans &trans   &trans   &trans                             &trans    &kp UNDER &kp PLUS  &kp LBRC &kp RBRC &trans
       &trans    &trans   &trans &trans   &trans   &trans    &trans          &trans   &trans    &trans    &trans    &trans   &trans   &trans
       &trans    &trans   &trans &trans   &trans             &trans          &trans             &trans    &trans    &trans   &trans   &trans
                     >;
              };
              raise_layer {
 // ---------------------------------------------------------------------------------------------------------------------------------
 // |   `   |   1   |   2   |   3   |   4   |   5   |                                    |   6   |   7   |   8   |   9   |   0   |  DEL  |
 // |       |  F1   |  F2   |  F3   |  F4   |  F5   |                                    |  F6   |   -   |   =   |   [   |   ]   |   \   |
 // |       |  F7   |  F8   |  F9   |  F10  |  F11  |       |                    |       |  F12  |       |       |       |       |       |
 // |       |       |       |       |       |       |       |                    |       |       |       | NEXT  | VOL-  | VOL+  | PLAY  |
                     bindings = <
       &kp GRAVE &kp N1 &kp N2 &kp N3 &kp N4  &kp N5                       &kp N6  &kp N7    &kp N8     &kp N9       &kp N0       &kp DEL
       &trans    &kp F1 &kp F2 &kp F3 &kp F4  &kp F5                       &kp F6  &kp MINUS &kp EQUAL  &kp LBKT     &kp RBKT     &kp BSLH
       &trans    &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &trans        &trans &kp F12 &trans    &trans     &trans       &trans       &trans
       &trans    &trans &trans &trans &trans          &trans        &trans         &trans    &kp C_NEXT &kp C_VOL_DN &kp C_VOL_UP &kp C_PP
                     >;
              };
       };
};